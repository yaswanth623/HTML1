Configclass:

package com.Employee.SBA;

import javax.persistence.EntityManagerFactory;

import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@EnableTransactionManagement
@Configuration
public class ConfigClass {
	@Autowired
	EntityManagerFactory entityManagerFactory;

	@Bean
	public SessionFactory getSessionFactory(){
	return entityManagerFactory.unwrap(SessionFactory.class);
	}
}
-------------------------------------------------------------------
Controllerclass:


package com.Employee.SBA;
import java.text.DateFormat;
import java.util.Date;
import java.util.Locale;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.Employee.SBA.EmployeeDao.EmployeeDao;
import com.Employee.SBA.model.Employee;
@Controller
public class HomeController {
	@Autowired
	EmployeeDao dao;
	@RequestMapping(value="/display")
	public String display(Model model,@ModelAttribute Employee employee) {
		String status=dao.saveEmployee(employee);
		model.addAttribute("status", status);
		return "success";
		}
	
	@RequestMapping(value="/")
	public String home()
	    {
		return "home";
	    }

	
	@RequestMapping(value="/evaluatelogin")
	public String evaluatelogin(Model model,@RequestParam("userName") String userName,@RequestParam("password") String password)
	{
		String status1=dao.evaluate(userName,password);
		model.addAttribute("status1",status1);
		return "output1";
	}
	@RequestMapping(value = "/validatepass")
	public String createNewPassword(Model model) {
	return "validatepass";
	}
	@RequestMapping(value="/evaluatesecurity")
	public String getSec(@RequestParam("userId") int userId,@RequestParam("secQue") String secQue,
			@RequestParam("secAns") String secAns,Model model) {
		Employee employee = null;

		employee = dao.getUserInfo(userId);
		
		if (secQue==(employee.getSecQue()) && secAns==(employee.getSecAns()) ) {
			model.addAttribute("userId", userId);
			System.out.println("correct");
			return "Changepass";
		}
		

		model.addAttribute("message", "Login Failed Please Enter Valid User Info");
		
				return "Changepass";
				
		
	}
	@RequestMapping(value="/newuser")
	public String createnewuser(Model model) {
		
		return "newuser";
		}
	@RequestMapping(value="/home")
	public String home(Model model)
	    {
		return "home";
	    }
	@RequestMapping("/forgotpass")
	public String getsecInfo() {
		return "forgotpassword";
     
}
	@RequestMapping("/changepass")
	public String changepass(@RequestParam String password, @RequestParam String conformPass,@RequestParam("userid") int userId) {
		System.out.println("userId : "+userId);
		if(password.equals(conformPass)) {
			dao.changePassword(password,userId);
			return "success";
		}
		return "ChangePass";
	}
}

	
------------------------------------------------------------------------------
Application class:


package com.Employee.SBA;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class SbaApplication {

	public static void main(String[] args) {
		SpringApplication.run(SbaApplication.class, args);
	}

}
--------------------------------------------------------------------
Employee Dao

package com.Employee.SBA.EmployeeDao;
import java.util.List;

import javax.transaction.Transactional;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.Employee.SBA.model.Employee;
@Component
@Transactional
public class EmployeeDao {
	@Autowired
	SessionFactory factory;
	
public EmployeeDao() {
	
}
public EmployeeDao(SessionFactory factory) {
	super();
	this.factory=factory;
}

public String saveEmployee(Employee employee) {
	
		try {
			Session session=factory.getCurrentSession();
			session.save(employee);
			return "Employee Created now";
		}
		catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			}
		return "Cannot Create Employee";
	}
//This is for evaluating logindetails are correct or not and transform to the next page
public String evaluate(String userName, String password) {
	//Employee employee=null;
	try {
		Session session=factory.getCurrentSession();
		Query query=session.createQuery("from Employee a where a.userName=:userName AND a.password=:password");
		query.setParameter("userName", userName);
	    query.setParameter("password", password);
		  List results=query.list();
		if ((results!=null) && (results.size()>0)){
	            return "success";
	        }
	        else {
	        return "Invalid Login details";
	}
	}
	catch (Exception e) {
		// TODO: handle exception
		e.printStackTrace();
		}
	return "Invalid login";
	}
//This is for evaluating securitydetails are correct or not and transform to the next page
public Employee getUserInfo(int userId) {
	try {
	Employee employee = null;

	//session = sessionFactory.getCurrentSession();
	Session session=factory.getCurrentSession();
	employee = session.get(Employee.class, userId);
	//System.out.println(" Data : "+user);
	
	return employee;
}
	catch (Exception e) {
		// TODO: handle exception
		e.printStackTrace();
		}
	return null;
	
 }
public Employee getSecInfo(int userId) {
	try {
	Session session=factory.getCurrentSession();
	Employee employee = null;
	//session = sessionFactory.getCurrentSession();
	employee = session.get(Employee.class, userId);
	return employee;
	
}
	catch (Exception e) {
		// TODO: handle exception
		e.printStackTrace();
		}
	return null;
}

public void changePassword(String password,int userId) {
	try{
		Employee employee = null;
	
	Session session=factory.getCurrentSession();
	employee = getSecInfo(userId);
	employee.setPassword(password);

	// = this.sessionFactory.getCurrentSession();
	
		session.update(employee);
}
	catch (Exception e) {
		// TODO: handle exception
		e.printStackTrace();
		}
	
	
}
}


--------------------------------------------------------------------------------
Employee

package com.Employee.SBA.model;
import javax.persistence.Entity;
import javax.persistence.Id;

@Entity
public class Employee {
	@Id
int userId;
String userName;
String password;
String secQue;
String secAns;
public int getUserId() {
	return userId;
}
public void setUserId(int userId) {
	this.userId = userId;
}
public String getUserName() {
	return userName;
}
public void setUserName(String userName) {
	this.userName = userName;
}
public String getPassword() {
	return password;
}
public void setPassword(String password) {
	this.password = password;
}
public String getSecQue() {
	return secQue;
}
public void setSecQue(String secQue) {
	this.secQue = secQue;
}
public String getSecAns() {
	return secAns;
}
public void setSecAns(String secAns) {
	this.secAns = secAns;
}
@Override
public String toString() {
	return "Employee [userId=" + userId + ", userName=" + userName + ", password=" + password + ", secQue=" + secQue
			+ ", secAns=" + secAns + "]";
}
public Employee(int userId, String userName, String password, String secQue, String secAns) {
	super();
	this.userId = userId;
	this.userName = userName;
	this.password = password;
	this.secQue = secQue;
	this.secAns = secAns;
}
public Employee()
{
	
}

}
-------------------------------------------------------------------------------------------------
Application properties


server.port=2111
spring.mvc.view.suffix=.jsp
spring.mvc.view.prefix=/views/
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.jpa.show-sql = true

spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext


spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
spring.jpa.hibernate.ddl-auto=update

# Oracle settings
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=dxcfs
spring.datasource.password=pass
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
# logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=debug
----------------------------------------------------------------------------------------
pom.xml-----------


<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>
<groupId>dxcresthib</groupId>
<artifactId>Dxc-RestHib</artifactId>
<version>0.0.1-SNAPSHOT</version>
<name>Dxc-RestHib</name>
<description>Demo project for Spring Boot</description>


    <properties>
        <start-class>spring-boot-example.Application</start-class>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.1.RELEASE</version>
    </parent>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            
        </dependency>
        <dependency>
<groupId>jstl</groupId>
<artifactId>jstl</artifactId>
<version>1.2</version>
</dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-jdbc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
<!-- https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-jasper -->
<dependency>
    <groupId>org.apache.tomcat</groupId>
    <artifactId>tomcat-jasper</artifactId>
    <version>8.5.11</version>
</dependency>


        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
        </dependency>
    </dependencies>

</project>
---------------------------------------------------------------------------------------------------------------------------------------------

views------------------------------------------------------------------------------

home.jsp----------------
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<!DOCTYPE html>

<html lang="en">
<head>
<style>
body {
  background-color: lightblue;
}

h4 {text-align: center;}
</style>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Spring Boot Validation Login Form Example</title>
<link rel="stylesheet"
    href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
<link rel="stylesheet"
    href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
<link rel="stylesheet" href="style.css" />
</head>
<body style="background-color:powderblue;">
    <div class="login-form">
        <form action="#" th:action="@{/}" th:object="${loginForm}"
            method="post">
            <h2 class="text-center">Sign in</h2>
            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-user"></i></span>
  <h4 >                
<form action="evaluatelogin">
Enter userName:<input type="text" name="userName">
<br>
Enter Password:<input type="text" name="password">
<br>
<input type="submit">
<br>
</form>
Click here for New User<form action="newuser">
<input type="submit" value="Newuser">
</form>

<form action="validatepass">
Click here for Forgot password
<br>
<input type="submit" value="Forgotpassword">
</form>
</div>
</div>
</h1>
</form>
</body>
---------------------------------------------------------------------------------------
newuser--------
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Home</title>
</head>
<style>
h4 {text-align: center;}
</style>
<h4>
<body style="background-color:powderblue;">

<form action="display">
Enter Id:<input type="text" name="userId">
<br>
Enter Name:<input type="text" name="userName">
<br>
Enter Pass:<input type="text" name="password">
<br>

Choose a Sec Que:
<select>
    <option value="What is your first Bat">What is your first Bat</option>
    <option value="What is your first Car">What is your first Car</option>
    <option value="What is your first IPL Team">What is your first IPL Team</option>
    <option value="what is yout first match score">what is your first match score</option>
  </select>
  <br>

Enter Sec Ans:<input type="text" name="secAns">
<br>
<input type="submit">
</form>
</h4>


</body>
--------------------------------------------------------------------------------------

Changepass--------------------------

changepass-------------

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
	pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
<style type="text/css">
body
{
background: url("forgot.jpg");
background-repeat: no-repeat;
background-size: 55%;
opacity: 0.6;
}

</style>


<meta name="viewport" content="width=device-width, initial-scale=1">
<!-- Add icon library -->
<link rel="stylesheet"
	href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<style>
body {
	font-family: Arial, Helvetica, sans-serif;
}

* {
	box-sizing: border-box;
}

.input-container {
	display: -ms-flexbox; /* IE10 */
	display: flex;
	width: 100%;
	margin-bottom: 15px;
}

.icon {
	padding: 10px;
	background: powderblue;
	color: white;
	min-width: 50px;
	text-align: center;
}

.input-field {
	width: 100%;
	padding: 10px;
	outline: none;
}

.input-field:focus {
	border: 2px solid powderblue;
}

/* Set a style for the submit button */
.btn {
	background-color: powderblue;
	color: white;
	padding: 15px 20px;
	border: none;
	cursor: pointer;
	width: 100%;
	opacity: 0.9;
}

.btn:hover {
	opacity: 1;
}
</style>
<script type="text/javascript">
	
</script>
</head>
<body>


<h2>${userId}</h2>
	<form action="changepass">
		<style="max-width: 300px; margin: auto">
		<center>
			<h2 style="color: powderblue">CHANGE PASSWORD</h2>
		</center>
		<div class="input-container">
    
    <input class="input-field" type="hidden" placeholder="User Id" name="userid"  value="${userId}" onkeypress ="test(event)" required>
  </div>
		
		<div class="input-container">
			<i class="fa fa-key icon"></i> <input class="input-field"
				type="password" placeholder="Password" name="password" required>
		</div>
		<div class="input-container">
			<i class="fa fa-key icon"></i> <input class="input-field"
				type="password" placeholder="Conform Password" name="conformPass"
				required>
		</div>
		<button type="submit" class="btn">Login</button>
	</form>
	
</body>
----------------------------------------------------------------------------------------------------

output--------------------------

<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<!DOCTYPE html>

<html lang="en">
<head>
<style>
body {
  background-color: lightblue;
}

h4 {text-align: center;}
</style>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Spring Boot Validation Login Form Example</title>
<link rel="stylesheet"
    href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
<link rel="stylesheet"
    href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
<link rel="stylesheet" href="style.css" />
</head>
<body style="background-color:powderblue;">
    <div class="login-form">
        <form action="#" th:action="@{/}" th:object="${loginForm}"
            method="post">
            <h2 class="text-center">Sign in</h2>
            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-user"></i></span>
  <h4 >   
Employee created 

</h4>

</form>
</body>
---------------------------------------------------------------------------------

output1-----------------------------------------

<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<!DOCTYPE html>

<html lang="en">
<head>
<style>
body {
  background-color: lightblue;
}

h4 {text-align: center;}
</style>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Spring Boot Validation Login Form Example</title>
<link rel="stylesheet"
    href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
<link rel="stylesheet"
    href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
<link rel="stylesheet" href="style.css" />
</head>
<body style="background-color:powderblue;">
    <div class="login-form">
        <form action="#" th:action="@{/}" th:object="${loginForm}"
            method="post">
            <h2 class="text-center">Sign in</h2>
            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-user"></i></span>
  <h4 >   
welcome
<p>${status1}</p>
</h4>
</form>
</body>
------------------------------------------------------------------------------------------------

success------------------------------------------------

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>

<!DOCTYPE html>

<html lang="en">
<head>
<style>
body {
  background-color: lightblue;
}

h4 {text-align: center;}
</style>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Spring Boot Validation Login Form Example</title>
<link rel="stylesheet"
    href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
<link rel="stylesheet"
    href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
<link rel="stylesheet" href="style.css" />
</head>
<body style="background-color:powderblue;">
    <div class="login-form">
        <form action="#" th:action="@{/}" th:object="${loginForm}"
            method="post">
            <h2 class="text-center">Sign in</h2>
            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-user"></i></span>
  <h4 >   
<form action="home">
<input type="submit" value="Returnhome">
</form>
</h4>



</body>
------------------------------------------------------------------------------------------------------------------------

validatepass---------------------------------------------------------------

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Home</title>
</head>
<style>
h4 {text-align: center;}
</style>
<body style="background-color:powderblue;">
<h4>
<form action="evaluatesecurity">
Enter userId:<input type="text" name="userId">
<br>
Choose a Sec Que:
<select name="secQue">
<option value="What is your first Bat">What is your first Bat</option>
    <option value="What is your first Car">What is your first Car</option>
    <option value="What is your first IPL Team">What is your first IPL Team</option>
    <option value="what is yout first match score">what is your first match score</option>
</select>
<br>
Enter Sec Ans:<input type="text" name="secAns">
<br>

<input type="submit">
</h4>
</form>

